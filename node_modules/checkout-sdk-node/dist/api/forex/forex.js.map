{"version":3,"file":"forex.js","names":["_errors","require","_http","_utils","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Forex","constructor","config","request","body","_this","response","post","httpClient","host","sk","json","determineError","getRates","_this2","url","buildQueryParams","get","exports","default"],"sources":["../../../src/api/forex/forex.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\nimport { buildQueryParams } from '../../services/utils';\r\n\r\n/**\r\n * Class dealing with the forex api\r\n *\r\n * @export\r\n * @class Forex\r\n */\r\nexport default class Forex {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Request an exchange rate between a source and destination currency\r\n     *\r\n     * @param {Object} body Forex object body.\r\n     * @return {Promise<Object>} A promise to the Forex response.\r\n     */\r\n    async request(body) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/forex/quotes`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use the Forex (FX) rates API to get the indicative foreign exchange rates that Checkout.com\r\n     * uses to process payments for card payouts\r\n     *\r\n     * @param {Object} body Forex params.\r\n     * @return {Promise<Object>} A promise to the Forex response.\r\n     */\r\n    async getRates(body) {\r\n        try {\r\n            const url = buildQueryParams(`${this.config.host}/forex/rates`, body);\r\n\r\n            const response = await get(\r\n                this.config.httpClient, \r\n                url, \r\n                this.config, \r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAAwD,SAAAG,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,GAAA,cAAAC,IAAA,GAAAP,GAAA,CAAAK,GAAA,EAAAC,GAAA,OAAAE,KAAA,GAAAD,IAAA,CAAAC,KAAA,WAAAC,KAAA,IAAAP,MAAA,CAAAO,KAAA,iBAAAF,IAAA,CAAAG,IAAA,IAAAT,OAAA,CAAAO,KAAA,YAAAG,OAAA,CAAAV,OAAA,CAAAO,KAAA,EAAAI,IAAA,CAAAT,KAAA,EAAAC,MAAA;AAAA,SAAAS,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAN,OAAA,WAAAV,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAc,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAb,MAAAK,KAAA,IAAAT,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAI,KAAA,cAAAJ,OAAAe,GAAA,IAAApB,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAe,GAAA,KAAAhB,KAAA,CAAAiB,SAAA;AAExD;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,KAAK,CAAC;EACvBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACUC,OAAOA,CAACC,IAAI,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAb,iBAAA;MAChB,IAAI;QACA,MAAMc,QAAQ,SAAS,IAAAC,UAAI,EACvBF,KAAI,CAACH,MAAM,CAACM,UAAU,EACrB,GAAEH,KAAI,CAACH,MAAM,CAACO,IAAK,eAAc,EAClCJ,KAAI,CAACH,MAAM,EACXG,KAAI,CAACH,MAAM,CAACQ,EAAE,EACdN,IACJ,CAAC;QACD,aAAaE,QAAQ,CAACK,IAAI;MAC9B,CAAC,CAAC,OAAOb,GAAG,EAAE;QACV,YAAY,IAAAc,sBAAc,EAACd,GAAG,CAAC;MACnC;IAAC;EACL;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACUe,QAAQA,CAACT,IAAI,EAAE;IAAA,IAAAU,MAAA;IAAA,OAAAtB,iBAAA;MACjB,IAAI;QACA,MAAMuB,GAAG,GAAG,IAAAC,uBAAgB,EAAE,GAAEF,MAAI,CAACZ,MAAM,CAACO,IAAK,cAAa,EAAEL,IAAI,CAAC;QAErE,MAAME,QAAQ,SAAS,IAAAW,SAAG,EACtBH,MAAI,CAACZ,MAAM,CAACM,UAAU,EACtBO,GAAG,EACHD,MAAI,CAACZ,MAAM,EACXY,MAAI,CAACZ,MAAM,CAACQ,EAChB,CAAC;QACD,aAAaJ,QAAQ,CAACK,IAAI;MAC9B,CAAC,CAAC,OAAOb,GAAG,EAAE;QACV,YAAY,IAAAc,sBAAc,EAACd,GAAG,CAAC;MACnC;IAAC;EACL;AACJ;AAACoB,OAAA,CAAAC,OAAA,GAAAnB,KAAA"}