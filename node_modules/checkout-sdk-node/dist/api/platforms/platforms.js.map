{"version":3,"file":"platforms.js","names":["_errors","require","_http","_config","_formData","_interopRequireDefault","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","Platforms","constructor","config","uploadFile","purpose","path","_this","form","FormData","append","url","host","includes","PLATFORMS_FILES_SANDBOX_URL","PLATFORMS_FILES_LIVE_URL","response","post","httpClient","formData","sk","json","determineError","onboardSubEntity","body","_this2","uploadAFile","entityId","_this3","retrieveAFile","fileId","_this4","get","getSubEntityMembers","_this5","reinviteSubEntityMember","userId","_this6","put","getSubEntityDetails","id","_this7","updateSubEntityDetails","_this8","getPaymentInstrumentDetails","_this9","updatePaymentInstrumentDetails","_this10","patch","createPaymentInstrument","_this11","addPaymentInstrument","_this12","queryPaymentInstruments","status","_this13","retrieveSubEntityPayoutSchedule","_this14","updateSubEntityPayoutSchedule","_this15","exports"],"sources":["../../../src/api/platforms/platforms.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { get, patch, post, put } from '../../services/http';\r\nimport { \r\n    PLATFORMS_FILES_LIVE_URL, \r\n    PLATFORMS_FILES_SANDBOX_URL \r\n} from '../../config';\r\n\r\nimport FormData from 'form-data';\r\n\r\n/**\r\n * Class dealing with the platforms api\r\n *\r\n * @export\r\n * @class Platforms\r\n */\r\nexport default class Platforms {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Our Platforms solution provides an easy way to upload identity documentation required for full due diligence.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} purpose The purpose of the file upload.\r\n     * @param {Object} path The local path of the file to upload, and its type.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async uploadFile(purpose, path) {\r\n        try {\r\n            const form = new FormData();\r\n            form.append('path', path);\r\n            form.append('purpose', purpose);\r\n\r\n            const url = `${this.config.host.includes('sandbox')\r\n                    ? PLATFORMS_FILES_SANDBOX_URL\r\n                    : PLATFORMS_FILES_LIVE_URL\r\n                }`;\r\n\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                url,\r\n                { ...this.config, formData: true },\r\n                this.config.sk,\r\n                form\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Onboard a sub-entity so they can start receiving payments. Once created,\r\n     * Checkout.com will run due diligence checks. If the checks are successful,\r\n     * we'll enable payment capabilities for that sub-entity and they will start\r\n     * receiving payments.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {Object} body Platforms request body.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async onboardSubEntity(body) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Our Platforms solution provides an easy way to upload documentation required for full due diligence.\r\n     * Use this endpoint to generate a file upload link, which you can then upload a file to using a data-binary type request.\r\n     * See the https://www.checkout.com/docs/platforms/onboard-sub-entities/full-sub-entity-onboarding/upload-a-file#Upload_a_file for more information.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} entityId The ID of the sub-entity.\r\n     * @param {Object} body The body\r\n     * @param {string} body.purpose The purpose of the file upload.\r\n     * @returns {Promise<Object>}\r\n     */\r\n    async uploadAFile(entityId, body) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${entityId}/files`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve information about a previously uploaded file.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} entityId The ID of the sub-entity.\r\n     * @param {string} fileId The ID of the file. The value is always prefixed with file_.\r\n     * @returns {Promise<Object>}\r\n     */\r\n    async retrieveAFile(entityId, fileId) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${entityId}/files/${fileId}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve information on all users of a sub-entity that has been invited through Hosted Onboarding\r\n     * (https://www.checkout.com/docs/platforms/onboard-sub-entities/onboard-with-hosted-onboarding). Only\r\n     * one user can be invited to onboard the sub-entity through Hosted Onboarding.\r\n     *\r\n     * To enable the Hosted Onboarding feature, contact your Customer Success Manager.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} entityId Sub-entity id.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async getSubEntityMembers(entityId) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${entityId}/members`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resend an invitation to the user of a sub-entity. The user will receive another email to continue their\r\n     * Hosted Onboarding (https://www.checkout.com/docs/platforms/onboard-sub-entities/onboard-with-hosted-onboarding)\r\n     * application. An invitation can only be resent to the user originally registered to the\r\n     * sub-entity.\r\n     *\r\n     * To enable the Hosted Onboarding feature, contact your Customer Success Manager.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} entityId The ID of the sub-entity.\r\n     * @param {string} userId The ID of the invited user.\r\n     * @param {Object} body The body (Reinvite sub-entity member)\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async reinviteSubEntityMember(entityId, userId, body) {\r\n        try {\r\n            const response = await put(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${entityId}/members/${userId}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this endpoint to retrieve a sub-entity and its full details.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} id Sub-entity id.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async getSubEntityDetails(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * You can update all fields under the Contact details, Profile, and Company objects.\r\n     * You can also add identification information to complete due diligence requirements.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} id Sub-entity id.\r\n     * @param {Object} body Platforms request body.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async updateSubEntityDetails(id, body) {\r\n        try {\r\n            const response = await put(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${id}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve the details of a specific payment instrument used for sub-entity payouts.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} entityId The sub-entity's ID.\r\n     * @param {string} id The payment instrument's ID.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async getPaymentInstrumentDetails(entityId, id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${entityId}/payment-instruments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update a session by providing information about the environment.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} entityId Sub-entity id.\r\n     * @param {string} id Payment instrument's id.\r\n     * @param {Object} body Platforms request body.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async updatePaymentInstrumentDetails(entityId, id, body) {\r\n        try {\r\n            const response = await patch(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${entityId}/payment-instruments/${id}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update a session by providing information about the environment.\r\n     *\r\n     * @deprecated Use the payment instrument operations at /payment-instruments instead.\r\n     * @memberof Platforms\r\n     * @param {string} id Sub-entity id.\r\n     * @param {Object} body Platforms request body.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async createPaymentInstrument(id, body) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${id}/instruments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update a session by providing information about the environment.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} id Sub-entity id.\r\n     * @param {Object} body Platforms request body.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async addPaymentInstrument(id, body) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${id}/payment-instruments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch all of the payment instruments for a sub-entity. You can filter by status to\r\n     * identify verified instruments that are ready to be used for Payouts.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} id The sub-entity's ID.\r\n     * @param {string} status The status of your sub-entity's payment instrument.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async queryPaymentInstruments(id, status) {\r\n        try {\r\n            const url = `${this.config.host}/accounts/entities/${id}/payment-instruments${status ? `?status=${status}` : ''\r\n                }`;\r\n\r\n            const response = await get(this.config.httpClient, url, this.config, this.config.sk);\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * You can schedule when your sub-entities receive their funds using our Platforms solution.\r\n     * Use this endpoint to retrieve information about a sub-entity's schedule.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} id The sub-entity's ID.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async retrieveSubEntityPayoutSchedule(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${id}/payout-schedules`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * You can schedule when your sub-entities receive their funds using our Platforms solution.\r\n     * Use this endpoint to update a sub-entity's schedule.\r\n     *\r\n     * @memberof Platforms\r\n     * @param {string} id The sub-entity's ID.\r\n     * @param {Object} body Platforms request body.\r\n     * @return {Promise<Object>} A promise to the Platforms response.\r\n     */\r\n    async updateSubEntityPayoutSchedule(id, body) {\r\n        try {\r\n            const response = await put(\r\n                this.config.httpClient,\r\n                `${this.config.host}/accounts/entities/${id}/payout-schedules`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"}