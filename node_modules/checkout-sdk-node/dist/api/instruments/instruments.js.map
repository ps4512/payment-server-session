{"version":3,"file":"instruments.js","names":["_errors","require","_http","_validation","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Instruments","constructor","config","create","body","_this","setInstrumentType","response","post","httpClient","host","sk","json","determineError","get","id","_this2","update","_this3","patch","delete","_this4","_delete","getBankAccountFieldFormatting","country","currency","_this5","exports","default"],"sources":["../../../src/api/instruments/instruments.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { _delete, get, patch, post } from '../../services/http';\r\nimport { setInstrumentType } from '../../services/validation';\r\n\r\n/**\r\n * Class dealing with the /instruments endpoint\r\n *\r\n * @export\r\n * @class Instruments\r\n */\r\nexport default class Instruments {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Exchange a single use Checkout.com token for a payment instrument reference,\r\n     * that can be used at any time to request one or more payments.\r\n     *\r\n     * @memberof Instruments\r\n     * @param {Object} body Instruments request body.\r\n     * @return {Promise<Object>} A promise to the request instruments response.\r\n     */\r\n    async create(body) {\r\n        setInstrumentType(body);\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns details of an instrument\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} id Instrument id.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async get(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update details of an instrument\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} id Instrument id.\r\n     * @param {Object} body Instruments request body.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async update(id, body) {\r\n        try {\r\n            const response = await patch(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments/${id}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete a payment instrument.\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} id Instrument id.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async delete(id) {\r\n        try {\r\n            const response = await _delete(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete a payment instrument.\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} country Country 2 character ISO.\r\n     * @param {string} currency Currency 3 character ISO.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async getBankAccountFieldFormatting(country, currency) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/validation/bank-accounts/${country}/${currency}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"}