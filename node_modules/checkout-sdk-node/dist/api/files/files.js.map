{"version":3,"file":"files.js","names":["_errors","require","_http","_formData","_interopRequireDefault","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","Files","constructor","config","upload","body","_this","form","FormData","isUrl","file","append","filename","split","pop","path","response","post","httpClient","host","formData","sk","json","determineError","getFile","fileId","_this2","get","exports","string","url","URL","_","protocol"],"sources":["../../../src/api/files/files.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\n\r\nimport FormData from 'form-data';\r\n\r\n/**\r\n * Class dealing with the /files endpoint\r\n *\r\n * @export\r\n * @class Files\r\n */\r\nexport default class Files {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Upload a file to use as evidence in a dispute. Your file must be in either JPEG/JPG,\r\n     * PNG or PDF format, and be no larger than 4MB.\r\n     *\r\n     * @memberof Files\r\n     * @param {Object} body Files request body.\r\n     * @return {Promise<Object>} A promise to the files response.\r\n     */\r\n    async upload(body) {\r\n        try {\r\n            const form = new FormData();\r\n\r\n            // Handle local files and remote files\r\n            if (isUrl(body.file)) {\r\n                // use file and file name from remote\r\n                form.append('file', body.file, {\r\n                    filename: body.file.split('/').pop().split('#')[0].split('?')[0],\r\n                });\r\n            } else {\r\n                // use the local file\r\n                form.append('file', body.file || body.path);\r\n            }\r\n            form.append('purpose', 'dispute_evidence');\r\n\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/files`,\r\n                { ...this.config, formData: true },\r\n                this.config.sk,\r\n                form\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve information about a file that was previously uploaded.\r\n     *\r\n     * @memberof Files\r\n     * @param {string} fileId Files id.\r\n     * @return {Promise<Object>} A promise to the files response.\r\n     */\r\n    async getFile(fileId) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/files/${fileId}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nconst isUrl = (string) => {\r\n    let url;\r\n\r\n    try {\r\n        url = new URL(string);\r\n    } catch (_) {\r\n        return false;\r\n    }\r\n\r\n    return url.protocol === 'http:' || url.protocol === 'https:';\r\n};\r\n"],"mappings":"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"}