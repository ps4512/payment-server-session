{"version":3,"file":"balances.js","names":["_config","require","_errors","_http","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","Balances","constructor","config","retrieve","id","currency","_this","url","host","includes","BALANCES_SANDBOX_URL","BALANCES_LIVE_URL","response","get","httpClient","sk","json","determineError","exports","default"],"sources":["../../../src/api/balances/balances.js"],"sourcesContent":["import { \r\n    BALANCES_LIVE_URL, \r\n    BALANCES_SANDBOX_URL \r\n} from '../../config';\r\nimport { determineError } from '../../services/errors';\r\nimport { get } from '../../services/http';\r\n\r\n/**\r\n * Class dealing with the /balances endpoint\r\n *\r\n * @export\r\n * @class Balances\r\n */\r\nexport default class Balances {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Use this endpoint to retrieve balances for each currency account belonging to an entity.\r\n     *\r\n     * @memberof Balances\r\n     * @param {string} id The ID of the entity.\r\n     * @param {string} currency The query to apply to limit the currency accounts.\r\n     * @return {Promise<Object>} A promise to the balances response.\r\n     */\r\n    async retrieve(id, currency) {\r\n        try {\r\n            const url = `${\r\n                this.config.host.includes('sandbox') ? BALANCES_SANDBOX_URL : BALANCES_LIVE_URL\r\n            }/${id}${currency ? `?query=currency:${currency}` : ''}`;\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                url,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAIA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAA0C,SAAAG,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,GAAA,cAAAC,IAAA,GAAAP,GAAA,CAAAK,GAAA,EAAAC,GAAA,OAAAE,KAAA,GAAAD,IAAA,CAAAC,KAAA,WAAAC,KAAA,IAAAP,MAAA,CAAAO,KAAA,iBAAAF,IAAA,CAAAG,IAAA,IAAAT,OAAA,CAAAO,KAAA,YAAAG,OAAA,CAAAV,OAAA,CAAAO,KAAA,EAAAI,IAAA,CAAAT,KAAA,EAAAC,MAAA;AAAA,SAAAS,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAN,OAAA,WAAAV,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAc,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAb,MAAAK,KAAA,IAAAT,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAI,KAAA,cAAAJ,OAAAe,GAAA,IAAApB,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAe,GAAA,KAAAhB,KAAA,CAAAiB,SAAA;AAE1C;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,QAAQ,CAAC;EAC1BC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACUC,QAAQA,CAACC,EAAE,EAAEC,QAAQ,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAd,iBAAA;MACzB,IAAI;QACA,MAAMe,GAAG,GAAI,GACTD,KAAI,CAACJ,MAAM,CAACM,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAGC,4BAAoB,GAAGC,yBACjE,IAAGP,EAAG,GAAEC,QAAQ,GAAI,mBAAkBA,QAAS,EAAC,GAAG,EAAG,EAAC;QACxD,MAAMO,QAAQ,SAAS,IAAAC,SAAG,EACtBP,KAAI,CAACJ,MAAM,CAACY,UAAU,EACtBP,GAAG,EACHD,KAAI,CAACJ,MAAM,EACXI,KAAI,CAACJ,MAAM,CAACa,EAChB,CAAC;QACD,aAAaH,QAAQ,CAACI,IAAI;MAC9B,CAAC,CAAC,OAAOlB,GAAG,EAAE;QACV,MAAMV,KAAK,SAAS,IAAA6B,sBAAc,EAACnB,GAAG,CAAC;QACvC,MAAMV,KAAK;MACf;IAAC;EACL;AACJ;AAAC8B,OAAA,CAAAC,OAAA,GAAAnB,QAAA"}