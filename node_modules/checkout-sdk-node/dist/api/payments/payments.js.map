{"version":3,"file":"payments.js","names":["_errors","require","_http","_validation","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","_toPropertyKey","configurable","writable","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","Number","addUtilityParams","json","requiresRedirect","destination","isPending","status","hasRedirectUrl","_links","redirect","redirectLink","href","Payments","constructor","config","request","body","idempotencyKey","_this","setSourceOrDestinationType","validatePayment","response","post","httpClient","host","sk","determineError","getPaymentList","_this2","url","queryString","map","join","get","id","_this3","getActions","_this4","increment","_this5","capture","paymentId","_this6","refund","_this7","void","_this8","exports","default"],"sources":["../../../src/api/payments/payments.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\nimport { setSourceOrDestinationType, validatePayment } from '../../services/validation';\r\n\r\nconst addUtilityParams = (json) => {\r\n    let requiresRedirect = false;\r\n\r\n    if (json.destination) {\r\n        requiresRedirect = false;\r\n    } else {\r\n        const isPending = json.status === 'Pending';\r\n        const hasRedirectUrl = json._links.redirect !== undefined;\r\n        requiresRedirect = isPending && hasRedirectUrl;\r\n    }\r\n\r\n    // If the redirection URL exists add it to the response body as 'redirectLink'\r\n    let redirectLink;\r\n    if (requiresRedirect && json._links.redirect) {\r\n        redirectLink = json._links.redirect.href;\r\n    }\r\n    return {\r\n        ...json,\r\n        requiresRedirect,\r\n        redirectLink,\r\n    };\r\n};\r\n\r\n/**\r\n * Class dealing with the /payments endpoint\r\n *\r\n * @export\r\n * @class Payments\r\n */\r\nexport default class Payments {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Sends payment or a payout requests.\r\n     *\r\n     * @memberof Payments\r\n     * @param {Object} body Payment Request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to payment response.\r\n     */\r\n    async request(body, idempotencyKey) {\r\n        try {\r\n            setSourceOrDestinationType(body);\r\n            validatePayment(body);\r\n\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return addUtilityParams(await response.json);\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a list of your business' payments that match the specified reference.\r\n     *\r\n     * @memberof Payments\r\n     * @param {Object} body /^(pay|sid)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @return {Promise<Object>} A promise to the get payment response.\r\n     */\r\n    async getPaymentList(body) {\r\n        let url = `${this.config.host}/payments`;\r\n\r\n        if (body) {\r\n            const queryString = Object.keys(body)\r\n                .map((key) => `${key}=${body[key]}`)\r\n                .join('&');\r\n            url += `?${queryString}`;\r\n        }\r\n\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                url,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the details of the payment with the specified identifier string.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay|sid)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @return {Promise<Object>} A promise to the get payment response.\r\n     */\r\n    async get(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all the actions associated with a payment ordered by processing date in\r\n     * descending order (latest first).\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment identifier.\r\n     * @return {Promise<Object>} A promise to the getActions response.\r\n     */\r\n    async getActions(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${id}/actions`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Request an incremental authorization to increase the authorization amount or extend\r\n     * the authorization's validity period.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment identifier.\r\n     * @param {Object} body Payment Request body.\r\n     * @return {Promise<Object>} A promise to the getActions response.\r\n     */\r\n    async increment(id, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${id}/authorizations`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Captures a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Capture request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the capture response.\r\n     */\r\n    async capture(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${paymentId}/captures`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refunds a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Refund request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the refund response.\r\n     */\r\n    async refund(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${paymentId}/refunds`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Voids a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Void request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the void response.\r\n     */\r\n    async void(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${paymentId}/voids`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"}